package Scheme.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Application;
  private ConceptPresentation props_IfStmt;
  private ConceptPresentation props_LambdaExpression;
  private ConceptPresentation props_Program;
  private ConceptPresentation props_SpecialForm;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Application:
        if (props_Application == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("( ");
          props_Application = cpb.create();
        }
        return props_Application;
      case LanguageConceptSwitch.IfStmt:
        if (props_IfStmt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("(if");
          props_IfStmt = cpb.create();
        }
        return props_IfStmt;
      case LanguageConceptSwitch.LambdaExpression:
        if (props_LambdaExpression == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_LambdaExpression = cpb.create();
        }
        return props_LambdaExpression;
      case LanguageConceptSwitch.Program:
        if (props_Program == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Program = cpb.create();
        }
        return props_Program;
      case LanguageConceptSwitch.SpecialForm:
        if (props_SpecialForm == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_SpecialForm = cpb.create();
        }
        return props_SpecialForm;
    }
    return null;
  }
}
